# Autogenerated by autotester

require 'rails_helper'

RSpec.describe Projects::Services::BaseController, type: :controller do
  let(:user) { create(:user) }
  let(:account) { create(:account, owner: user) }
  let(:project) { create(:project, account: account) }
  let(:service) { create(:service, project: project) }

  before do
    allow(controller).to receive(:authenticate_user!).and_return(true)
    allow(controller).to receive(:current_account).and_return(account)
    allow(controller).to receive(:current_user).and_return(user)
  end

  describe 'before_action callbacks' do
    it { is_expected.to use_before_action(:set_project) }
    it { is_expected.to use_before_action(:set_service) }
  end

  describe 'private methods' do
    describe '#set_service' do
      controller(Projects::Services::BaseController) do
        def index
          render plain: "Success"
        end
      end

      context 'when service exists' do
        before do
          allow(subject).to receive(:params).and_return({ project_id: project.id, service_id: service.id })
          get :index
        end

        it 'sets the @service instance variable' do
          expect(assigns(:service)).to eq(service)
        end
      end

      context 'when service does not exist' do
        before do
          allow(subject).to receive(:params).and_return({ project_id: project.id, service_id: 'non-existent' })
        end

        it 'raises an ActiveRecord::RecordNotFound error' do
          expect { get :index }.to raise_error(ActiveRecord::RecordNotFound)
        end
      end
    end
  end
end
