# Autogenerated by autotester

require 'rails_helper'

RSpec.describe Clusters::IsReady, type: :action do
  let(:cluster) { instance_double('Cluster', kubeconfig: kubeconfig) }
  let(:kubeconfig) { { 'some' => 'config' }.to_json }
  let(:client) { instance_double('K8::Client') }
  let(:context) { LightService::Context.make(cluster: cluster) }

  before do
    allow(K8::Client).to receive(:new).with(kubeconfig).and_return(client)
  end

  describe '.executed' do
    subject { described_class.execute(context) }

    context 'when client can connect' do
      before do
        allow(client).to receive(:can_connect?).and_return(true)
        allow(cluster).to receive(:installing!)
        allow(cluster).to receive(:success)
      end

      it 'sets cluster to installing state' do
        subject
        expect(cluster).to have_received(:installing!)
      end

      it 'logs a success message' do
        subject
        expect(cluster).to have_received(:success).with("Cluster is ready")
      end

      it 'does not fail the context' do
        subject
        expect(context).not_to be_failure
      end
    end

    context 'when client cannot connect' do
      before do
        allow(client).to receive(:can_connect?).and_return(false)
        allow(cluster).to receive(:error)
      end

      it 'logs an error message' do
        subject
        expect(cluster).to have_received(:error).with("Cluster is not ready, retrying in 60 seconds...")
      end

      it 'fails the context' do
        subject
        expect(context).to be_failure
      end

      it 'provides the correct failure message' do
        subject
        expect(context.message).to eq("Cluster is not ready")
      end
    end
  end
end
